;;; smartscan-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from smartscan.el

(autoload 'smartscan-symbol-go-forward "smartscan" "\
Jumps forward to the next symbol at point" t)
(autoload 'smartscan-symbol-go-backward "smartscan" "\
Jumps backward to the previous symbol at point" t)
(autoload 'smartscan-symbol-replace "smartscan" "\
Replaces the symbol at point with another string in the entire buffer.

With C-u the scope is limited to the current defun, as defined by
`narrow-to-defun'.

This function uses `search-forward' and `replace-match' to do the
actual work.

(fn ARG)" t)
(autoload 'smartscan-mode "smartscan" "\
Jumps between other symbols found at point.

When Smart Scan mode is enabled, you can jump between the all the
symbols in your current buffer that point is on.

You can customize Smart Scan by editing
`smartscan-use-extended-syntax' and `smartscan-symbol-selector'.

Key bindings:
\\{smartscan-map}

This is a minor mode.  If called interactively, toggle the
`Smartscan mode' mode.  If the prefix argument is positive,
enable the mode, and if it is zero or negative, disable the mode.

If called from Lisp, toggle the mode if ARG is `toggle'.  Enable
the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

To check whether the minor mode is enabled in the current buffer,
evaluate `smartscan-mode'.

The mode's hook is called both when the mode is enabled and when
it is disabled.

(fn &optional ARG)" t)
(put 'global-smartscan-mode 'globalized-minor-mode t)
(defvar global-smartscan-mode nil "\
Non-nil if Global Smartscan mode is enabled.
See the `global-smartscan-mode' command
for a description of this minor mode.
Setting this variable directly does not take effect;
either customize it (see the info node `Easy Customization')
or call the function `global-smartscan-mode'.")
(custom-autoload 'global-smartscan-mode "smartscan" nil)
(autoload 'global-smartscan-mode "smartscan" "\
Toggle Smartscan mode in all buffers.
With prefix ARG, enable Global Smartscan mode if ARG is positive;
otherwise, disable it.

If called from Lisp, toggle the mode if ARG is `toggle'.
Enable the mode if ARG is nil, omitted, or is a positive number.
Disable the mode if ARG is a negative number.

Smartscan mode is enabled in all buffers where
`smartscan-mode-turn-on' would do it.

See `smartscan-mode' for more information on Smartscan mode.

(fn &optional ARG)" t)
(register-definition-prefixes "smartscan" '("smartscan-"))

;;; End of scraped data

(provide 'smartscan-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; smartscan-autoloads.el ends here
